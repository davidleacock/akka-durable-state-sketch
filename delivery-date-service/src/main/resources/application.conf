akka.actor.allow-java-serialization = true

akka {

  loglevel = INFO

  actor {
    provider = "cluster"
    debug {
      receive = on
      lifecycle = on
    }
  }

  remote {
    artery {
      transport = tcp
      canonical.hostname = "127.0.0.1"
      canonical.port = 25520
    }
  }

  cluster {
    seed-nodes = [
      "akka://delivery-date-app@127.0.0.1:25520",
    ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"
    state.plugin = "jdbc-durable-state-store"
  }

}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

# the akka-persistence-jdbc provider in use for durable state store
jdbc-durable-state-store {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    host = ${?DB_HOST}
    url = "jdbc:postgresql://"${slick.db.host}":5432/testdb?reWriteBatchedInserts=true"
    user = "postgres"
    password = "password"
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}